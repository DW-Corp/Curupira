name: CD

on:
  push:
    branches: ["master"]
    tags: ["v*"]

jobs:
  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: dwcorp/curupira
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Production with OpenTofu
    runs-on: ubuntu-latest
    needs: docker
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.6.0

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Initialize OpenTofu
        run: |
          cd deploy
          tofu init

      - name: Plan deployment
        run: |
          cd deploy
          tofu plan \
            -var="server_host=${{ secrets.DEPLOY_HOST }}" \
            -var="server_user=${{ secrets.DEPLOY_USERNAME }}" \
            -var="server_ssh_key=${{ secrets.DEPLOY_SSH_KEY }}" \
            -var="app_version=${{ steps.version.outputs.version }}" \
            -var="postgres_password=${{ secrets.POSTGRES_PASSWORD }}" \
            -var="session_secret=${{ secrets.SESSION_SECRET }}"

      - name: Apply deployment
        run: |
          cd deploy
          tofu apply -auto-approve \
            -var="server_host=${{ secrets.DEPLOY_HOST }}" \
            -var="server_user=${{ secrets.DEPLOY_USERNAME }}" \
            -var="server_ssh_key=${{ secrets.DEPLOY_SSH_KEY }}" \
            -var="app_version=${{ steps.version.outputs.version }}" \
            -var="postgres_password=${{ secrets.POSTGRES_PASSWORD }}" \
            -var="session_secret=${{ secrets.SESSION_SECRET }}"
